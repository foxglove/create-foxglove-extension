name: CI

on:
  push:
    branches: main
    tags: v*
  pull_request:
    branches: "*"

jobs:
  lint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4.2.2

      - run: corepack enable

      - name: Configure Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 20.x
          cache: yarn

      - run: yarn install --immutable
      - run: yarn run tsc --noEmit # typecheck files that are not included by webpack or package builds
      - run: yarn lint:ci

  test:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4.2.2

      - run: corepack enable

      - name: Configure Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 20.x
          cache: yarn

      - run: yarn install --immutable
      - name: test
        run: yarn run test --maxWorkers=100%

  e2e:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-20.04
          - ubuntu-22.04
          - windows-2022

    name: e2e (${{ matrix.os }})

    steps:
      - uses: actions/checkout@v4.2.2

      # On windows we need to run `corepack enable` after setup-node and on linux we need
      # to run it before. On linux it is ok to run it after as well.
      - run: corepack enable
        if: matrix.os == 'windows-2022'

      - name: Configure Node.js
        uses: actions/setup-node@v4.1.0
        with:
          node-version: 20.x

      - run: corepack enable

      - run: yarn install --immutable

      # pack into tarball so we can use it with npx
      - run: yarn pack

      - name: create sample extension
        run: npx package.tgz sample

      # install local package.tgz to use the foxglove-scripts from this build
      - run: npm install ../package.tgz
        working-directory: sample

      # confirm that the generated extension code passes lint
      - name: lint generated extension code
        working-directory: sample
        run: npm run lint

      # confirm that the generated extension code can be packaged
      - name: package generated extension
        working-directory: sample
        run: npm run package
